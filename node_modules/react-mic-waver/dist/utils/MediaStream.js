"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useMediaStream = exports["default"] = exports.MediaStreamProvider = void 0;

var _react = _interopRequireDefault(require("react"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var MediaStreamContext = /*#__PURE__*/_react["default"].createContext({
  stream: undefined,
  start: function start() {
    return undefined;
  },
  stop: function stop() {
    return undefined;
  }
});

var useMediaStream = function useMediaStream() {
  return _react["default"].useContext(MediaStreamContext);
};

exports.useMediaStream = useMediaStream;

var MediaStreamProvider = function MediaStreamProvider(_ref) {
  var audio = _ref.audio,
      video = _ref.video,
      children = _ref.children;

  var _React$useState = _react["default"].useState(),
      _React$useState2 = _slicedToArray(_React$useState, 2),
      stream = _React$useState2[0],
      setStream = _React$useState2[1];

  _react["default"].useEffect(function () {
    return function () {
      if (stream) {
        stream.getTracks().forEach(function (track) {
          return track.stop();
        });
      }
    };
  }, [stream]);

  var start = _react["default"].useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
    var mediaStream;
    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return navigator.mediaDevices.getUserMedia({
              audio: audio,
              video: video
            });

          case 2:
            mediaStream = _context.sent;
            setStream(mediaStream);

          case 4:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  })), [audio, video]);

  var stop = _react["default"].useCallback(function () {
    if (stream) {
      stream.getTracks().forEach(function (track) {
        return track && track.stop();
      });
      setStream(undefined);
    }
  }, [stream]);

  return /*#__PURE__*/_react["default"].createElement(MediaStreamContext.Provider, {
    value: {
      stream: stream,
      start: start,
      stop: stop
    }
  }, children);
};

exports.MediaStreamProvider = MediaStreamProvider;
var _default = MediaStreamProvider;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlscy9NZWRpYVN0cmVhbS50c3giXSwibmFtZXMiOlsiTWVkaWFTdHJlYW1Db250ZXh0IiwiUmVhY3QiLCJjcmVhdGVDb250ZXh0Iiwic3RyZWFtIiwidW5kZWZpbmVkIiwic3RhcnQiLCJzdG9wIiwidXNlTWVkaWFTdHJlYW0iLCJ1c2VDb250ZXh0IiwiTWVkaWFTdHJlYW1Qcm92aWRlciIsImF1ZGlvIiwidmlkZW8iLCJjaGlsZHJlbiIsInVzZVN0YXRlIiwic2V0U3RyZWFtIiwidXNlRWZmZWN0IiwiZ2V0VHJhY2tzIiwiZm9yRWFjaCIsInRyYWNrIiwidXNlQ2FsbGJhY2siLCJuYXZpZ2F0b3IiLCJtZWRpYURldmljZXMiLCJnZXRVc2VyTWVkaWEiLCJtZWRpYVN0cmVhbSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQVFBLElBQU1BLGtCQUFrQixnQkFBR0Msa0JBQU1DLGFBQU4sQ0FBNkM7QUFDdEVDLEVBQUFBLE1BQU0sRUFBRUMsU0FEOEQ7QUFFdEVDLEVBQUFBLEtBQUssRUFBRTtBQUFBLFdBQU1ELFNBQU47QUFBQSxHQUYrRDtBQUd0RUUsRUFBQUEsSUFBSSxFQUFFO0FBQUEsV0FBTUYsU0FBTjtBQUFBO0FBSGdFLENBQTdDLENBQTNCOztBQU1PLElBQU1HLGNBQWMsR0FBRyxTQUFqQkEsY0FBaUI7QUFBQSxTQUM1Qk4sa0JBQU1PLFVBQU4sQ0FBaUJSLGtCQUFqQixDQUQ0QjtBQUFBLENBQXZCOzs7O0FBU0EsSUFBTVMsbUJBQW1CLEdBQUcsU0FBdEJBLG1CQUFzQixPQUlFO0FBQUEsTUFIbkNDLEtBR21DLFFBSG5DQSxLQUdtQztBQUFBLE1BRm5DQyxLQUVtQyxRQUZuQ0EsS0FFbUM7QUFBQSxNQURuQ0MsUUFDbUMsUUFEbkNBLFFBQ21DOztBQUNuQyx3QkFBNEJYLGtCQUFNWSxRQUFOLEVBQTVCO0FBQUE7QUFBQSxNQUFPVixNQUFQO0FBQUEsTUFBZVcsU0FBZjs7QUFFQWIsb0JBQU1jLFNBQU4sQ0FBZ0IsWUFBTTtBQUNwQixXQUFPLFlBQU07QUFDWCxVQUFJWixNQUFKLEVBQVk7QUFDVkEsUUFBQUEsTUFBTSxDQUFDYSxTQUFQLEdBQW1CQyxPQUFuQixDQUEyQixVQUFDQyxLQUFEO0FBQUEsaUJBQVdBLEtBQUssQ0FBQ1osSUFBTixFQUFYO0FBQUEsU0FBM0I7QUFDRDtBQUNGLEtBSkQ7QUFLRCxHQU5ELEVBTUcsQ0FBQ0gsTUFBRCxDQU5IOztBQVFBLE1BQU1FLEtBQUssR0FBR0osa0JBQU1rQixXQUFOLHVFQUFrQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLG1CQUNKQyxTQUFTLENBQUNDLFlBQVYsQ0FBdUJDLFlBQXZCLENBQW9DO0FBQzVEWixjQUFBQSxLQUFLLEVBQUxBLEtBRDREO0FBRTVEQyxjQUFBQSxLQUFLLEVBQUxBO0FBRjRELGFBQXBDLENBREk7O0FBQUE7QUFDeEJZLFlBQUFBLFdBRHdCO0FBSzlCVCxZQUFBQSxTQUFTLENBQUNTLFdBQUQsQ0FBVDs7QUFMOEI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBbEIsSUFNWCxDQUFDYixLQUFELEVBQVFDLEtBQVIsQ0FOVyxDQUFkOztBQVFBLE1BQU1MLElBQUksR0FBR0wsa0JBQU1rQixXQUFOLENBQWtCLFlBQU07QUFDbkMsUUFBSWhCLE1BQUosRUFBWTtBQUNWQSxNQUFBQSxNQUFNLENBQUNhLFNBQVAsR0FBbUJDLE9BQW5CLENBQTJCLFVBQUNDLEtBQUQ7QUFBQSxlQUFXQSxLQUFLLElBQUlBLEtBQUssQ0FBQ1osSUFBTixFQUFwQjtBQUFBLE9BQTNCO0FBQ0FRLE1BQUFBLFNBQVMsQ0FBQ1YsU0FBRCxDQUFUO0FBQ0Q7QUFDRixHQUxZLEVBS1YsQ0FBQ0QsTUFBRCxDQUxVLENBQWI7O0FBT0Esc0JBQ0UsZ0NBQUMsa0JBQUQsQ0FBb0IsUUFBcEI7QUFBNkIsSUFBQSxLQUFLLEVBQUU7QUFBRUEsTUFBQUEsTUFBTSxFQUFOQSxNQUFGO0FBQVVFLE1BQUFBLEtBQUssRUFBTEEsS0FBVjtBQUFpQkMsTUFBQUEsSUFBSSxFQUFKQTtBQUFqQjtBQUFwQyxLQUNHTSxRQURILENBREY7QUFLRCxDQW5DTTs7O2VBcUNRSCxtQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcblxuaW50ZXJmYWNlIE1lZGlhU3RyZWFtQ29udGV4dFZhbHVlIHtcbiAgc3RyZWFtOiBNZWRpYVN0cmVhbSB8IHVuZGVmaW5lZDtcbiAgc3RhcnQ6ICgpID0+IHZvaWQ7XG4gIHN0b3A6ICgpID0+IHZvaWQ7XG59XG5cbmNvbnN0IE1lZGlhU3RyZWFtQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQ8TWVkaWFTdHJlYW1Db250ZXh0VmFsdWU+KHtcbiAgc3RyZWFtOiB1bmRlZmluZWQsXG4gIHN0YXJ0OiAoKSA9PiB1bmRlZmluZWQsXG4gIHN0b3A6ICgpID0+IHVuZGVmaW5lZCxcbn0pO1xuXG5leHBvcnQgY29uc3QgdXNlTWVkaWFTdHJlYW0gPSAoKTogTWVkaWFTdHJlYW1Db250ZXh0VmFsdWUgPT5cbiAgUmVhY3QudXNlQ29udGV4dChNZWRpYVN0cmVhbUNvbnRleHQpO1xuXG5leHBvcnQgaW50ZXJmYWNlIE1lZGlhU3RyZWFtUHJvcHMge1xuICBhdWRpbzogYm9vbGVhbjtcbiAgdmlkZW86IGJvb2xlYW47XG4gIGNoaWxkcmVuPzogUmVhY3QuUmVhY3ROb2RlIHwgSlNYLkVsZW1lbnQ7XG59XG5cbmV4cG9ydCBjb25zdCBNZWRpYVN0cmVhbVByb3ZpZGVyID0gKHtcbiAgYXVkaW8sXG4gIHZpZGVvLFxuICBjaGlsZHJlbixcbn06IE1lZGlhU3RyZWFtUHJvcHMpOiBKU1guRWxlbWVudCA9PiB7XG4gIGNvbnN0IFtzdHJlYW0sIHNldFN0cmVhbV0gPSBSZWFjdC51c2VTdGF0ZTxNZWRpYVN0cmVhbT4oKTtcblxuICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBpZiAoc3RyZWFtKSB7XG4gICAgICAgIHN0cmVhbS5nZXRUcmFja3MoKS5mb3JFYWNoKCh0cmFjaykgPT4gdHJhY2suc3RvcCgpKTtcbiAgICAgIH1cbiAgICB9O1xuICB9LCBbc3RyZWFtXSk7XG5cbiAgY29uc3Qgc3RhcnQgPSBSZWFjdC51c2VDYWxsYmFjayhhc3luYyAoKSA9PiB7XG4gICAgY29uc3QgbWVkaWFTdHJlYW0gPSBhd2FpdCBuYXZpZ2F0b3IubWVkaWFEZXZpY2VzLmdldFVzZXJNZWRpYSh7XG4gICAgICBhdWRpbyxcbiAgICAgIHZpZGVvLFxuICAgIH0pO1xuICAgIHNldFN0cmVhbShtZWRpYVN0cmVhbSk7XG4gIH0sIFthdWRpbywgdmlkZW9dKTtcblxuICBjb25zdCBzdG9wID0gUmVhY3QudXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIGlmIChzdHJlYW0pIHtcbiAgICAgIHN0cmVhbS5nZXRUcmFja3MoKS5mb3JFYWNoKCh0cmFjaykgPT4gdHJhY2sgJiYgdHJhY2suc3RvcCgpKTtcbiAgICAgIHNldFN0cmVhbSh1bmRlZmluZWQpO1xuICAgIH1cbiAgfSwgW3N0cmVhbV0pO1xuXG4gIHJldHVybiAoXG4gICAgPE1lZGlhU3RyZWFtQ29udGV4dC5Qcm92aWRlciB2YWx1ZT17eyBzdHJlYW0sIHN0YXJ0LCBzdG9wIH19PlxuICAgICAge2NoaWxkcmVufVxuICAgIDwvTWVkaWFTdHJlYW1Db250ZXh0LlByb3ZpZGVyPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgTWVkaWFTdHJlYW1Qcm92aWRlcjtcbiJdfQ==