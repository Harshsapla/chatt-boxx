"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _AudioAnalyser = require("../utils/AudioAnalyser");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var AudioVisualiser = function AudioVisualiser(_ref) {
  var stream = _ref.stream,
      _ref$width = _ref.width,
      width = _ref$width === void 0 ? "auto" : _ref$width,
      _ref$height = _ref.height,
      height = _ref$height === void 0 ? "auto" : _ref$height,
      _ref$color = _ref.color,
      color = _ref$color === void 0 ? "black" : _ref$color,
      _ref$lineWidth = _ref.lineWidth,
      lineWidth = _ref$lineWidth === void 0 ? 2 : _ref$lineWidth,
      onRender = _ref.onRender,
      style = _ref.style;
  var canvasRef = /*#__PURE__*/(0, _react.createRef)();
  var analyser = (0, _AudioAnalyser.useAudioAnalyser)(stream);
  (0, _react.useEffect)(function () {
    if (!analyser) {
      return;
    }

    var raf;
    var data = new Uint8Array(analyser.frequencyBinCount);

    var draw = function draw() {
      raf = requestAnimationFrame(draw);
      analyser.getByteTimeDomainData(data);
      var canvas = canvasRef.current;

      if (canvas) {
        var _height = canvas.height,
            _width = canvas.width;
        var context = canvas.getContext("2d");
        var x = 0;
        var sliceWidth = _width * 0.25 / data.length;

        if (context) {
          context.lineWidth = lineWidth;
          context.strokeStyle = color;
          context.clearRect(0, 0, _width, _height);
          context.beginPath();
          context.moveTo(0, _height / 2);

          var _iterator = _createForOfIteratorHelper(data),
              _step;

          try {
            for (_iterator.s(); !(_step = _iterator.n()).done;) {
              var item = _step.value;
              var y = item / 255.0 * _height;
              context.lineTo(x, y);
              x += sliceWidth;
            }
          } catch (err) {
            _iterator.e(err);
          } finally {
            _iterator.f();
          }

          context.lineTo(x, _height / 2);
          context.stroke();
        }
      }
    };

    draw();
    onRender && onRender();
    return function () {
      cancelAnimationFrame(raf);
    };
  }, [canvasRef, analyser]);
  return /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, analyser ? /*#__PURE__*/_react["default"].createElement("canvas", {
    width: width,
    height: height,
    ref: canvasRef,
    style: style
  }) : null);
};

var _default = AudioVisualiser;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy92aXN1YWxpemVyL2luZGV4LnRzeCJdLCJuYW1lcyI6WyJBdWRpb1Zpc3VhbGlzZXIiLCJzdHJlYW0iLCJ3aWR0aCIsImhlaWdodCIsImNvbG9yIiwibGluZVdpZHRoIiwib25SZW5kZXIiLCJzdHlsZSIsImNhbnZhc1JlZiIsImFuYWx5c2VyIiwicmFmIiwiZGF0YSIsIlVpbnQ4QXJyYXkiLCJmcmVxdWVuY3lCaW5Db3VudCIsImRyYXciLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJnZXRCeXRlVGltZURvbWFpbkRhdGEiLCJjYW52YXMiLCJjdXJyZW50IiwiY29udGV4dCIsImdldENvbnRleHQiLCJ4Iiwic2xpY2VXaWR0aCIsImxlbmd0aCIsInN0cm9rZVN0eWxlIiwiY2xlYXJSZWN0IiwiYmVnaW5QYXRoIiwibW92ZVRvIiwiaXRlbSIsInkiLCJsaW5lVG8iLCJzdHJva2UiLCJjYW5jZWxBbmltYXRpb25GcmFtZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7O0FBQ0E7Ozs7Ozs7Ozs7OztBQWFBLElBQU1BLGVBQWUsR0FBRyxTQUFsQkEsZUFBa0IsT0FRRTtBQUFBLE1BUHhCQyxNQU93QixRQVB4QkEsTUFPd0I7QUFBQSx3QkFOeEJDLEtBTXdCO0FBQUEsTUFOeEJBLEtBTXdCLDJCQU5oQixNQU1nQjtBQUFBLHlCQUx4QkMsTUFLd0I7QUFBQSxNQUx4QkEsTUFLd0IsNEJBTGYsTUFLZTtBQUFBLHdCQUp4QkMsS0FJd0I7QUFBQSxNQUp4QkEsS0FJd0IsMkJBSmhCLE9BSWdCO0FBQUEsNEJBSHhCQyxTQUd3QjtBQUFBLE1BSHhCQSxTQUd3QiwrQkFIWixDQUdZO0FBQUEsTUFGeEJDLFFBRXdCLFFBRnhCQSxRQUV3QjtBQUFBLE1BRHhCQyxLQUN3QixRQUR4QkEsS0FDd0I7QUFDeEIsTUFBTUMsU0FBUyxnQkFBRyx1QkFBbEI7QUFDQSxNQUFNQyxRQUFRLEdBQUcscUNBQWlCUixNQUFqQixDQUFqQjtBQUVBLHdCQUFVLFlBQU07QUFDZCxRQUFJLENBQUNRLFFBQUwsRUFBZTtBQUNiO0FBQ0Q7O0FBRUQsUUFBSUMsR0FBSjtBQUVBLFFBQU1DLElBQUksR0FBRyxJQUFJQyxVQUFKLENBQWVILFFBQVEsQ0FBQ0ksaUJBQXhCLENBQWI7O0FBRUEsUUFBTUMsSUFBSSxHQUFHLFNBQVBBLElBQU8sR0FBTTtBQUNqQkosTUFBQUEsR0FBRyxHQUFHSyxxQkFBcUIsQ0FBQ0QsSUFBRCxDQUEzQjtBQUNBTCxNQUFBQSxRQUFRLENBQUNPLHFCQUFULENBQStCTCxJQUEvQjtBQUNBLFVBQU1NLE1BQU0sR0FBR1QsU0FBUyxDQUFDVSxPQUF6Qjs7QUFDQSxVQUFJRCxNQUFKLEVBQVk7QUFDVixZQUFRZCxPQUFSLEdBQTBCYyxNQUExQixDQUFRZCxNQUFSO0FBQUEsWUFBZ0JELE1BQWhCLEdBQTBCZSxNQUExQixDQUFnQmYsS0FBaEI7QUFDQSxZQUFNaUIsT0FBTyxHQUFHRixNQUFNLENBQUNHLFVBQVAsQ0FBa0IsSUFBbEIsQ0FBaEI7QUFDQSxZQUFJQyxDQUFDLEdBQUcsQ0FBUjtBQUNBLFlBQU1DLFVBQVUsR0FBSXBCLE1BQUssR0FBRyxJQUFULEdBQWlCUyxJQUFJLENBQUNZLE1BQXpDOztBQUVBLFlBQUlKLE9BQUosRUFBYTtBQUNYQSxVQUFBQSxPQUFPLENBQUNkLFNBQVIsR0FBb0JBLFNBQXBCO0FBQ0FjLFVBQUFBLE9BQU8sQ0FBQ0ssV0FBUixHQUFzQnBCLEtBQXRCO0FBQ0FlLFVBQUFBLE9BQU8sQ0FBQ00sU0FBUixDQUFrQixDQUFsQixFQUFxQixDQUFyQixFQUF3QnZCLE1BQXhCLEVBQStCQyxPQUEvQjtBQUVBZ0IsVUFBQUEsT0FBTyxDQUFDTyxTQUFSO0FBQ0FQLFVBQUFBLE9BQU8sQ0FBQ1EsTUFBUixDQUFlLENBQWYsRUFBa0J4QixPQUFNLEdBQUcsQ0FBM0I7O0FBTlcscURBT1FRLElBUFI7QUFBQTs7QUFBQTtBQU9YLGdFQUF5QjtBQUFBLGtCQUFkaUIsSUFBYztBQUN2QixrQkFBTUMsQ0FBQyxHQUFJRCxJQUFJLEdBQUcsS0FBUixHQUFpQnpCLE9BQTNCO0FBQ0FnQixjQUFBQSxPQUFPLENBQUNXLE1BQVIsQ0FBZVQsQ0FBZixFQUFrQlEsQ0FBbEI7QUFDQVIsY0FBQUEsQ0FBQyxJQUFJQyxVQUFMO0FBQ0Q7QUFYVTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQVlYSCxVQUFBQSxPQUFPLENBQUNXLE1BQVIsQ0FBZVQsQ0FBZixFQUFrQmxCLE9BQU0sR0FBRyxDQUEzQjtBQUNBZ0IsVUFBQUEsT0FBTyxDQUFDWSxNQUFSO0FBQ0Q7QUFDRjtBQUNGLEtBMUJEOztBQTJCQWpCLElBQUFBLElBQUk7QUFFSlIsSUFBQUEsUUFBUSxJQUFJQSxRQUFRLEVBQXBCO0FBRUEsV0FBTyxZQUFNO0FBQ1gwQixNQUFBQSxvQkFBb0IsQ0FBQ3RCLEdBQUQsQ0FBcEI7QUFDRCxLQUZEO0FBR0QsR0EzQ0QsRUEyQ0csQ0FBQ0YsU0FBRCxFQUFZQyxRQUFaLENBM0NIO0FBNkNBLHNCQUNFLGdDQUFDLGlCQUFELENBQU8sUUFBUCxRQUNHQSxRQUFRLGdCQUNQO0FBQVEsSUFBQSxLQUFLLEVBQUVQLEtBQWY7QUFBc0IsSUFBQSxNQUFNLEVBQUVDLE1BQTlCO0FBQXNDLElBQUEsR0FBRyxFQUFFSyxTQUEzQztBQUFzRCxJQUFBLEtBQUssRUFBRUQ7QUFBN0QsSUFETyxHQUVMLElBSE4sQ0FERjtBQU9ELENBaEVEOztlQWtFZVAsZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBjcmVhdGVSZWYsIENTU1Byb3BlcnRpZXMsIHVzZUVmZmVjdCB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgdXNlQXVkaW9BbmFseXNlciB9IGZyb20gXCIuLi91dGlscy9BdWRpb0FuYWx5c2VyXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgUHJvcHM8VCA9IHN0cmluZz4ge1xuICBzdHJlYW06IE1lZGlhU3RyZWFtIHwgdW5kZWZpbmVkO1xuICBjb2xvcj86IHN0cmluZztcbiAgd2lkdGg/OiBUO1xuICBoZWlnaHQ/OiBUO1xuICBsaW5lV2lkdGg/OiBudW1iZXI7XG4gIG9uUmVuZGVyPzogKCkgPT4gdm9pZDtcbiAgc3R5bGU/OiBDU1NQcm9wZXJ0aWVzO1xuICB0ZXN0SWQ/OiBzdHJpbmc7XG59XG5cbmNvbnN0IEF1ZGlvVmlzdWFsaXNlciA9ICh7XG4gIHN0cmVhbSxcbiAgd2lkdGggPSBcImF1dG9cIixcbiAgaGVpZ2h0ID0gXCJhdXRvXCIsXG4gIGNvbG9yID0gXCJibGFja1wiLFxuICBsaW5lV2lkdGggPSAyLFxuICBvblJlbmRlcixcbiAgc3R5bGUsXG59OiBQcm9wcyk6IEpTWC5FbGVtZW50ID0+IHtcbiAgY29uc3QgY2FudmFzUmVmID0gY3JlYXRlUmVmPEhUTUxDYW52YXNFbGVtZW50PigpO1xuICBjb25zdCBhbmFseXNlciA9IHVzZUF1ZGlvQW5hbHlzZXIoc3RyZWFtKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmICghYW5hbHlzZXIpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBsZXQgcmFmOiBudW1iZXI7XG5cbiAgICBjb25zdCBkYXRhID0gbmV3IFVpbnQ4QXJyYXkoYW5hbHlzZXIuZnJlcXVlbmN5QmluQ291bnQpO1xuXG4gICAgY29uc3QgZHJhdyA9ICgpID0+IHtcbiAgICAgIHJhZiA9IHJlcXVlc3RBbmltYXRpb25GcmFtZShkcmF3KTtcbiAgICAgIGFuYWx5c2VyLmdldEJ5dGVUaW1lRG9tYWluRGF0YShkYXRhKTtcbiAgICAgIGNvbnN0IGNhbnZhcyA9IGNhbnZhc1JlZi5jdXJyZW50O1xuICAgICAgaWYgKGNhbnZhcykge1xuICAgICAgICBjb25zdCB7IGhlaWdodCwgd2lkdGggfSA9IGNhbnZhcztcbiAgICAgICAgY29uc3QgY29udGV4dCA9IGNhbnZhcy5nZXRDb250ZXh0KFwiMmRcIik7XG4gICAgICAgIGxldCB4ID0gMDtcbiAgICAgICAgY29uc3Qgc2xpY2VXaWR0aCA9ICh3aWR0aCAqIDAuMjUpIC8gZGF0YS5sZW5ndGg7XG5cbiAgICAgICAgaWYgKGNvbnRleHQpIHtcbiAgICAgICAgICBjb250ZXh0LmxpbmVXaWR0aCA9IGxpbmVXaWR0aDtcbiAgICAgICAgICBjb250ZXh0LnN0cm9rZVN0eWxlID0gY29sb3I7XG4gICAgICAgICAgY29udGV4dC5jbGVhclJlY3QoMCwgMCwgd2lkdGgsIGhlaWdodCk7XG5cbiAgICAgICAgICBjb250ZXh0LmJlZ2luUGF0aCgpO1xuICAgICAgICAgIGNvbnRleHQubW92ZVRvKDAsIGhlaWdodCAvIDIpO1xuICAgICAgICAgIGZvciAoY29uc3QgaXRlbSBvZiBkYXRhKSB7XG4gICAgICAgICAgICBjb25zdCB5ID0gKGl0ZW0gLyAyNTUuMCkgKiBoZWlnaHQ7XG4gICAgICAgICAgICBjb250ZXh0LmxpbmVUbyh4LCB5KTtcbiAgICAgICAgICAgIHggKz0gc2xpY2VXaWR0aDtcbiAgICAgICAgICB9XG4gICAgICAgICAgY29udGV4dC5saW5lVG8oeCwgaGVpZ2h0IC8gMik7XG4gICAgICAgICAgY29udGV4dC5zdHJva2UoKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH07XG4gICAgZHJhdygpO1xuXG4gICAgb25SZW5kZXIgJiYgb25SZW5kZXIoKTtcblxuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBjYW5jZWxBbmltYXRpb25GcmFtZShyYWYpO1xuICAgIH07XG4gIH0sIFtjYW52YXNSZWYsIGFuYWx5c2VyXSk7XG5cbiAgcmV0dXJuIChcbiAgICA8UmVhY3QuRnJhZ21lbnQ+XG4gICAgICB7YW5hbHlzZXIgPyAoXG4gICAgICAgIDxjYW52YXMgd2lkdGg9e3dpZHRofSBoZWlnaHQ9e2hlaWdodH0gcmVmPXtjYW52YXNSZWZ9IHN0eWxlPXtzdHlsZX0gLz5cbiAgICAgICkgOiBudWxsfVxuICAgIDwvUmVhY3QuRnJhZ21lbnQ+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBBdWRpb1Zpc3VhbGlzZXI7XG4iXX0=